{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('Profile')) req.headers;\n});\nexport const signUp = authData => API.post('/user/signUp', authData);\nexport const logIn = authData => API.post('/user/logIn', authData);\nexport const postQuestion = questionData => API.post('/questions/Ask', questionData);\nexport const getAllQuestions = () => API.get('/questions/get');\nexport const deleteQuestion = id => API.delete(`/questions/delete/${id}`);\nexport const voteQuestion = (id, value, userId) => API.patch(`/questions/vote/${id}`, {\n  value,\n  userId\n});\nexport const postAnswer = (id, noOfAnswers, answerBody, userAnswered, userId) => API.patch(`/answer/post/${id}`, {\n  noOfAnswers,\n  answerBody,\n  userAnswered,\n  userId\n});\nexport const deleteAnswer = (id, answerId, noOfAnswers) => API.patch(`/answer/delete/${id}`, {\n  answerId,\n  noOfAnswers\n});","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","signUp","authData","post","logIn","postQuestion","questionData","getAllQuestions","get","deleteQuestion","id","delete","voteQuestion","value","userId","patch","postAnswer","noOfAnswers","answerBody","userAnswered","deleteAnswer","answerId"],"sources":["C:/Users/HP/Documents/React/stackoverflow-clone/client/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000'})\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if(localStorage.getItem('Profile'))\r\n  req.headers\r\n})\r\n\r\nexport const signUp = (authData) => API.post('/user/signUp', authData);\r\nexport const logIn = (authData) => API.post('/user/logIn', authData);\r\n\r\nexport const postQuestion = (questionData) => API.post('/questions/Ask',questionData)\r\nexport const getAllQuestions = () => API.get('/questions/get');\r\nexport const deleteQuestion = (id) => API.delete(`/questions/delete/${id}`)\r\nexport const voteQuestion =(id, value, userId) =>API.patch(`/questions/vote/${id}`, { value, userId })\r\n\r\nexport const postAnswer = ( id, noOfAnswers, answerBody, userAnswered, userId ) =>\r\n  API.patch(`/answer/post/${id}`, { noOfAnswers, answerBody, userAnswered, userId });\r\nexport const deleteAnswer = (id, answerId, noOfAnswers) =>\r\n  API.patch(`/answer/delete/${id}`, { answerId, noOfAnswers });"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAuB,CAAC,CAAC;AAE7DF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,IAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAClCF,GAAG,CAACG,OAAO;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAIC,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;AACtE,OAAO,MAAME,KAAK,GAAIF,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AAEpE,OAAO,MAAMG,YAAY,GAAIC,YAAY,IAAKf,GAAG,CAACY,IAAI,CAAC,gBAAgB,EAACG,YAAY,CAAC;AACrF,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,gBAAgB,CAAC;AAC9D,OAAO,MAAMC,cAAc,GAAIC,EAAE,IAAKnB,GAAG,CAACoB,MAAM,CAAE,qBAAoBD,EAAG,EAAC,CAAC;AAC3E,OAAO,MAAME,YAAY,GAAEA,CAACF,EAAE,EAAEG,KAAK,EAAEC,MAAM,KAAIvB,GAAG,CAACwB,KAAK,CAAE,mBAAkBL,EAAG,EAAC,EAAE;EAAEG,KAAK;EAAEC;AAAO,CAAC,CAAC;AAEtG,OAAO,MAAME,UAAU,GAAGA,CAAEN,EAAE,EAAEO,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEL,MAAM,KAC3EvB,GAAG,CAACwB,KAAK,CAAE,gBAAeL,EAAG,EAAC,EAAE;EAAEO,WAAW;EAAEC,UAAU;EAAEC,YAAY;EAAEL;AAAO,CAAC,CAAC;AACpF,OAAO,MAAMM,YAAY,GAAGA,CAACV,EAAE,EAAEW,QAAQ,EAAEJ,WAAW,KACpD1B,GAAG,CAACwB,KAAK,CAAE,kBAAiBL,EAAG,EAAC,EAAE;EAAEW,QAAQ;EAAEJ;AAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}