{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\React\\\\stackoverflow-clone\\\\client\\\\src\\\\pages\\\\Questions\\\\DisplayAnswers.jsx\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport QuestionsDetails from './QuestionsDetails';\nimport Avatar from '../../component/Avatar/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayAnswers = _ref => {\n  let {\n    question,\n    handleShare\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question.answer.map(ans => {\n      var _User, _User$result;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-ans\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: ans.answerBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-actions-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleShare,\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), ((_User = User) === null || _User === void 0 ? void 0 : (_User$result = _User.result) === null || _User$result === void 0 ? void 0 : _User$result._id) === (question === null || question === void 0 ? void 0 : question.userId) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleDelete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"answered \", moment(ans.answeredOn).fromNow()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/User/${question.userId}`,\n              className: \"user-link\",\n              style: {\n                color: '#0086d8'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                backgroundColor: \"green\",\n                px: \"8px\",\n                py: \"5px\",\n                children: ans.userAnswered.charAt(0).toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: ans.userAnswered\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)]\n      }, ans._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = DisplayAnswers;\nexport default DisplayAnswers;\nvar _c;\n$RefreshReg$(_c, \"DisplayAnswers\");","map":{"version":3,"names":["React","moment","Link","QuestionsDetails","Avatar","jsxDEV","_jsxDEV","DisplayAnswers","_ref","question","handleShare","children","answer","map","ans","_User","_User$result","className","answerBody","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","User","result","_id","userId","handleDelete","answeredOn","fromNow","to","style","color","backgroundColor","px","py","userAnswered","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/React/stackoverflow-clone/client/src/pages/Questions/DisplayAnswers.jsx"],"sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport QuestionsDetails from './QuestionsDetails'\r\nimport Avatar from '../../component/Avatar/Avatar'\r\n\r\nconst DisplayAnswers = ({question, handleShare}) => {\r\n  return (\r\n    <div>\r\n      {\r\n        question.answer.map((ans)=>(\r\n          <div className=\"display-ans\" key={ans._id}>\r\n            <p>{ans.answerBody}</p>\r\n            <div className='question-actions-user'>\r\n              <div> \r\n              <button type=\"button\" onClick={handleShare}>Share</button>\r\n              {\r\n                            User?.result?._id === question?.userId && (\r\n                                <button type='button' onClick={handleDelete}>Delete</button>\r\n                            )\r\n                        }\r\n               </div>\r\n             \r\n             <div>\r\n              <p>answered {moment(ans.answeredOn).fromNow()}</p>\r\n              <Link to={`/User/${question.userId}`} className='user-link' style={{color:'#0086d8'}}>\r\n                            <Avatar backgroundColor=\"green\" px='8px' py='5px'>{ans.userAnswered.charAt(0).toUpperCase()}</Avatar>\r\n                            <div>\r\n                                {ans.userAnswered}\r\n                            </div>\r\n                            </Link>\r\n             </div>\r\n          </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayAnswers\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}