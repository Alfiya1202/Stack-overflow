{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\React\\\\stackoverflow-clone\\\\client\\\\src\\\\pages\\\\Questions\\\\QuestionsDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionsDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  var questionsList = [{\n    id: 1,\n    votes: 3,\n    noOfAnswers: 2,\n    questionTitle: \"What is a function?\",\n    questionBody: \"It meant to be\",\n    questionTags: [\"java\", \"node.js\", \"mongodb\"],\n    userPosted: \"mano\",\n    askedOn: \"jan 1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'kumar',\n      answeredOn: \"jan 2\",\n      userId: 2\n    }]\n  }, {\n    id: 2,\n    votes: 0,\n    noOfAnswers: 0,\n    questionTitle: \"What is a function?\",\n    questionBody: \"It meant to be\",\n    questionTags: [\"javascript\", \"R\", \"python\"],\n    userPosted: \"mano\",\n    askedOn: \"jan 1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'kumar',\n      answeredOn: \"jan 2\",\n      userId: 2\n    }]\n  }, {\n    id: 3,\n    votes: 1,\n    noOfAnswers: 0,\n    questionTitle: \"What is a function?\",\n    questionBody: \"It meant to be\",\n    questionTags: [\"javascript\", \"R\", \"python\"],\n    userPosted: \"mano\",\n    askedOn: \"jan 1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'kumar',\n      answeredOn: \"jan 2\",\n      userId: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-detail-page\",\n    children: questionsList === null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: questionsList.filter(question => question._id === id).map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"question-details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: question.questionTtle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 22\n        }, this)\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = QuestionsDetails;\nexport default QuestionsDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionsDetails\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionsDetails","_s","id","questionsList","votes","noOfAnswers","questionTitle","questionBody","questionTags","userPosted","askedOn","answer","answerBody","userAnswered","answeredOn","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","question","_id","map","questionTtle","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/React/stackoverflow-clone/client/src/pages/Questions/QuestionsDetails.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nconst QuestionsDetails = () => {\r\n\r\n    const { id } =useParams()\r\n    var questionsList =[{\r\n        id:1,\r\n        votes: 3,\r\n        noOfAnswers:2,\r\n        questionTitle:\"What is a function?\",\r\n        questionBody:\"It meant to be\",\r\n        questionTags:[\"java\",\"node.js\",\"mongodb\"],\r\n        userPosted:\"mano\",\r\n        askedOn:\"jan 1\",\r\n        answer:[{\r\n            answerBody:\"Answer\",\r\n            userAnswered: 'kumar',\r\n            answeredOn: \"jan 2\",\r\n            userId: 2 ,\r\n        }]\r\n  \r\n  },{\r\n    id:2,\r\n        votes: 0,\r\n        noOfAnswers:0,\r\n        questionTitle:\"What is a function?\",\r\n        questionBody:\"It meant to be\",\r\n        questionTags:[\"javascript\",\"R\",\"python\"],\r\n        userPosted:\"mano\",\r\n        askedOn:\"jan 1\",\r\n        answer:[{\r\n          answerBody:\"Answer\",\r\n          userAnswered: 'kumar',\r\n          answeredOn: \"jan 2\",\r\n          userId: 2 ,\r\n      }]\r\n  \r\n  },{\r\n    id:3,\r\n        votes: 1,\r\n        noOfAnswers:0,\r\n        questionTitle:\"What is a function?\",\r\n        questionBody:\"It meant to be\",\r\n        questionTags:[\"javascript\",\"R\",\"python\"],\r\n        userPosted:\"mano\",\r\n        askedOn:\"jan 1\",\r\n        answer:[{\r\n          answerBody:\"Answer\",\r\n          userAnswered: 'kumar',\r\n          answeredOn: \"jan 2\",\r\n          userId: 2 ,\r\n      }]\r\n  \r\n  }]\r\n\r\n  return (\r\n    <div className='question-detail-page'>\r\n        {\r\n            questionsList ===null ?\r\n            <h1>loading......</h1>:\r\n            <>\r\n            {\r\n                questionsList.filter(question => question._id === id).map(question =>(\r\n                    <div key={question._id}>\r\n                     <section className='question-details-container'>\r\n                    <h1>{question.questionTtle}</h1>\r\n                    <div></div>\r\n                     </section>\r\n                    </div>\r\n                ))\r\n            }\r\n            </>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionsDetails\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}